{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/admin-nav/admin-nav.component.ts","./src/app/admin-nav/admin-nav.component.html","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/adminboard/adminboard.component.ts","./src/app/adminboard/adminboard.component.html","./src/app/api.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/authenticate.service.ts","./src/app/change-password/change-password.component.ts","./src/app/change-password/change-password.component.html","./src/app/contact/contact.component.ts","./src/app/contact/contact.component.html","./src/app/createshop/createshop.component.ts","./src/app/createshop/createshop.component.html","./src/app/customer/customer.component.ts","./src/app/customer/customer.component.html","./src/app/customers/customers.component.ts","./src/app/customers/customers.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/edit-customer/edit-customer.component.ts","./src/app/edit-customer/edit-customer.component.html","./src/app/editshop/editshop.component.ts","./src/app/editshop/editshop.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/interceptor/interceptor.ts","./src/app/material/material.module.ts","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/pagenotfound/pagenotfound.component.ts","./src/app/pagenotfound/pagenotfound.component.html","./src/app/reg-customer/reg-customer.component.ts","./src/app/reg-customer/reg-customer.component.html","./src/app/shop/shop.component.ts","./src/app/shop/shop.component.html","./src/app/shops/shops.component.ts","./src/app/shops/shops.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { AuthenticateService } from '../authenticate.service';\n\n@Component({\n  selector: 'app-admin-nav',\n  templateUrl: './admin-nav.component.html',\n  styleUrls: ['./admin-nav.component.css']\n})\nexport class AdminNavComponent implements OnInit {\n  isAdmin = false;\n  constructor(private auth: AuthenticateService) {\n\n   }\n\n  ngOnInit(): void {\n    this.isAdmin = this.auth.isAdmin();\n\n  }\n\n}\n","<mat-nav-list class=\"header\">\n  <a [routerLink]=\"['/']\" routerLinkActive=\"router-link-active\" mat-button color=\"primary\">home</a>\n  <a [routerLink]=\"['/admin/adminboard']\" routerLinkActive=\"router-link-active\" mat-button color=\"primary\">washes</a>\n  <a [routerLink]=\"['/admin/makeawash']\" routerLinkActive=\"router-link-active\"  mat-button color=\"primary\">+ wash</a>\n  <a [routerLink]=\"['/admin/shops']\" routerLinkActive=\"router-link-active\" *ngIf=isAdmin mat-button color=\"primary\">shops</a>\n  <a [routerLink]=\"['/admin/createshop']\"  routerLinkActive=\"router-link-active\" *ngIf=isAdmin mat-button color=\"primary\" >+ shop</a>\n  <a [routerLink]=\"['/admin']\"  mat-button color=\"accent\">logout</a>\n</mat-nav-list>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticateService } from '../authenticate.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n  imageurl = '../../assets/bannermed.jpg';\n  constructor(private auth: AuthenticateService) { }\n\n  ngOnInit(): void {\n  }\n  getAdmin(user){\n    this.auth.signin(user);\n  }\n\n\n}\n","\n\n<app-nav></app-nav>\n<mat-card class=\"mattop50 center\">\n  <img mat-card-image [src]=\"imageurl\">\n  <h2>sign in your credentials</h2>\n<form #f=\"ngForm\" (ngSubmit)=\"getAdmin(f.value)\">\n  <mat-form-field appearance=\"outline\">\n  <mat-label for=\"phoneNumber\">Phone number</mat-label>\n  <input matInput required type=\"text\" name=\"phoneNumber\" placeholder=\"Shop number\" auto-complete=\"phone\" id=\"phonenumber\" ngModel/>\n  </mat-form-field>\n  <br>\n  <mat-form-field appearance=\"outline\">\n  <mat-label for=\"password\">Password</mat-label>\n  <input matInput required type=\"password\" name=\"password\" placeholder=\"Password\" id=\"password\"  auto-complete=\"current-password\" ngModel/>\n  </mat-form-field>\n  <br>\n  <button type=\"submit\" color=\"primary\" mat-raised-button>Sign in</button>\n</form>\n</mat-card>\n\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiService } from '../api.service';\nimport { Customer } from '../model/customer.model';\nimport { AuthenticateService } from '../authenticate.service';\nimport { Shop } from '../model/shop.model';\n\n@Component({\n  selector: 'app-adminboard',\n  templateUrl: './adminboard.component.html',\n  styleUrls: ['./adminboard.component.css']\n})\nexport class AdminboardComponent implements OnInit {\n\n  customers: Customer[];\n  shop: Shop;\n\n  constructor(private api: ApiService, private auth: AuthenticateService) {\n    this.shop = this.auth.getPayLoad();\n   }\n\n  ngOnInit(): void {\n\n  }\n\n  signout(){\n    this.auth.deleteToken();\n  }\n\n}\n","\n<router-outlet></router-outlet>\n<app-customers></app-customers>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n\ninterface Customer {\n  data: object;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiService {\n  private apiurl = `http://localhost:7000/api/v1`;\n  customers: any;\n  constructor(private http: HttpClient) {\n\n   }\n\n   getCustomer(customer) {\n     return this.http.get<Customer>(`${this.apiurl}/${customer.phonenumber}`).pipe(\n       map(res => {\n         return res;\n        }),\n       catchError(err => of([]))\n     );\n   }\n\n   getCustomers(){\n      return this.http.get<Customer>(this.apiurl + '/admin/customers');\n    }\n\n    getShopCustomers(phoneNumber){\n      return this.http.get<Customer>(this.apiurl + `/admin/${phoneNumber}/customers`);\n    }\n\n    getTheCustomer(id){\n      return this.http.get<Customer>(`${this.apiurl}/admin/customers/${id}`);\n    }\n\n    postCustomer(user){\n      return this.http.post(`${this.apiurl}/admin/customers`, user);\n    }\n\n    deleteCustomer(id){\n      return this.http.delete(this.apiurl + '/admin/customers/' + id);\n    }\n\n    saveCustomer(customer){\n      return this.http.put(this.apiurl + '/admin/customers/' + customer._id, customer);\n    }\n\n    changePassword(value){\n      console.log(value);\n      return this.http.put(this.apiurl + '/admin/changePassword', value);\n    }\n\n    getShops(){\n      return this.http.get(`${this.apiurl}/admin/shops`);\n    }\n\n    getTheShop(id){\n      return this.http.get(`${this.apiurl}/admin/shops/${id}`);\n    }\n\n    deleteShop(id){\n      return this.http.delete(this.apiurl + '/admin/shops/' + id);\n    }\n\n    getTotalWash(phone){\n      return this.http.get(`${this.apiurl}/shops/${phone}`);\n    }\n\n    getDailyWash(){\n\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client-angular';\n  imageurl = '../../assets/bannermed.jpg';\n}\n","<router-outlet></router-outlet>\n<app-footer class=\"footer\"></app-footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { NavComponent } from './nav/nav.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AdminboardComponent } from './adminboard/adminboard.component';\nimport { CreateshopComponent } from './createshop/createshop.component';\nimport { CustomerComponent } from './customer/customer.component';\nimport { CustomersComponent } from './customers/customers.component';\nimport { RegCustomerComponent } from './reg-customer/reg-customer.component';\nimport { EditCustomerComponent } from './edit-customer/edit-customer.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { AuthGuard } from './auth.guard';\nimport { AuthenticateService } from './authenticate.service';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { Interceptor } from './interceptor/interceptor';\nimport { AdminNavComponent } from './admin-nav/admin-nav.component';\nimport { ShopsComponent } from './shops/shops.component';\nimport { ShopComponent } from './shop/shop.component';\nimport { EditshopComponent } from './editshop/editshop.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material/material.module';\nimport { ContactComponent } from './contact/contact.component';\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\n\nexport function getToken(){\n  return localStorage.getItem('token');\n}\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NavComponent,\n    FooterComponent,\n    AdminComponent,\n    DashboardComponent,\n    AdminboardComponent,\n    CreateshopComponent,\n    CustomerComponent,\n    CustomersComponent,\n    RegCustomerComponent,\n    EditCustomerComponent,\n    ChangePasswordComponent,\n    AdminNavComponent,\n    ShopsComponent,\n    ShopComponent,\n    EditshopComponent,\n    ContactComponent,\n    PagenotfoundComponent\n  ],\n  imports: [\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: getToken,\n        whitelistedDomains: ['http://localhost:4200/', 'http://localhost:4200/admin' ],\n        blacklistedRoutes: []\n      }\n    }),\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot([\n      {\n        path: '',\n        component: HomeComponent\n      },\n      {\n        path: 'home',\n        component: HomeComponent\n      },\n      {\n        path: 'contact',\n        component: ContactComponent\n      },\n      {\n        path: 'admin',\n        component: AdminComponent\n      },\n      {\n        path: 'dashboard',\n        component: DashboardComponent,\n        canActivate: [AuthGuard]\n      },\n      {\n        path: 'admin/createshop',\n        component: CreateshopComponent,\n        canActivate: [AuthGuard]\n      },\n      {\n        path: 'admin/adminboard',\n        component: AdminboardComponent,\n        canActivate: [AuthGuard]\n      },\n      {\n        path: 'admin/washes',\n        component: CustomersComponent,\n        canActivate: [AuthGuard]\n      },\n      {\n        path: 'admin/makeawash',\n        component: RegCustomerComponent,\n        canActivate: [AuthGuard]\n      },\n      {\n        path: 'admin/washes/:id',\n        component: EditCustomerComponent,\n        canActivate: [AuthGuard]\n      },\n      {\n        path: 'admin/changepassword/:phonenumber',\n        component: ChangePasswordComponent,\n        canActivate: [AuthGuard]\n      },\n      {\n        path: 'admin/shops',\n        component: ShopsComponent,\n        canActivate: [AuthGuard]\n      },\n      {\n        path: 'admin/shops/:id',\n        component: EditshopComponent,\n        canActivate: [AuthGuard]\n      },\n      {\n        path: '**',\n        redirectTo: 'home'\n      }\n\n    ]),\n    BrowserAnimationsModule,\n    MaterialModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS,\n       useClass: Interceptor,\n        multi: true },\n        AuthGuard,\n    AuthenticateService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { AuthenticateService } from './authenticate.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router, private auth: AuthenticateService){\n\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot):boolean {\n      if(!this.auth.isLoggedin()){\n        this.router.navigateByUrl('/admin');\n        this.auth.deleteToken();\n        return false;\n      }else{\n        return true;\n      }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticateService {\n  private apiurl = 'http://localhost:7000/api/v1';\n  // tslint:disable-next-line: max-line-length\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private jwtHelper: JwtHelperService) {\n\n   }\n\n\n  signin(user) {\n    return this.http.post(this.apiurl + '/admin/signin', user)\n    .subscribe((data: any) => {\n      console.log(data);\n      this.setToken(data.token);\n      this.router.navigateByUrl('admin/adminboard');\n    });\n  }\n\n  createShop(shop) {\n    return this.http.post(this.apiurl + '/admin/createShop', shop)\n    .subscribe(data => {\n      this.router.navigateByUrl('/admin/adminboard');\n    });\n  }\n\n  getToken(){\n    return localStorage.getItem('token');\n  }\n\n  checkToken(){\n\n  }\n  setToken(token){\n    localStorage.setItem('token', token);\n  }\n\n  deleteToken(){\n    localStorage.removeItem('token');\n    this.router.navigateByUrl('/admin');\n  }\n\n  getPayLoad(){\n    const token = this.getToken();\n    if(token){\n      const payload = this.jwtHelper.decodeToken(token);\n      return payload;\n    }else{\n      this.router.navigateByUrl('/admin');\n      return null;\n    }\n  }\n\n  isLoggedin(){\n   return !this.jwtHelper.isTokenExpired(this.getToken());\n  }\n\n  isAdmin():boolean {\n    const { role } = this.getPayLoad();\n    if(role === 'Administrator'){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n  }\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent implements OnInit {\n  imageurl = '../../assets/bannermed.jpg';\n  constructor(private api: ApiService) { }\n  theroles = ['Supervisor', 'Administrator'];\n  ngOnInit(): void {\n\n\n  }\n\n  changePassword(value){\n  const { phoneNumber, password, confirmPassword } = value;\n  if (password === confirmPassword){\n      this.api.changePassword(value)\n      .subscribe(res => console.log(res));\n    }else{\n      console.log('Password not compatible');\n    }\n}\n\n}\n","\n<mat-card>\n  <img mat-card-image [src]=\"imageurl\">\n<h2>edit shop profile</h2>\n<form #p=\"ngForm\" (ngSubmit)=\"changePassword(p.value)\">\n  <mat-form-field appearance=\"outline\">\n  <mat-label for=\"phone\">Phone number</mat-label>\n  <input matInput type=\"text\" id=\"phone\" name=\"phonenumber\" placeholder=\"Phone number\" ngModel >\n  </mat-form-field><br>\n  <mat-form-field appearance=\"outline\">\n  <mat-label for=\"newpassword\">New Password</mat-label>\n  <input matInput  type=\"password\" id=\"newpassword\" name=\"newpassword\" placeholder=\"Change password\" ngModel>\n  </mat-form-field><br>\n  <mat-form-field appearance=\"outline\">\n  <mat-label for=\"confirmpassword\">Confirm new Password</mat-label>\n  <input matInput  type=\"password\" id=\"confirmpassword\" name=\"confirmpassword\" placeholder=\"Confirm new password\" ngModel>\n  </mat-form-field><br>\n  <mat-form-field appearance=\"outline\">\n  <mat-label for=\"roles\">roles</mat-label>\n  <select id=\"roles\" name=\"roles\" ngModel matNativeControl required>\n    <option value=\"Supervisor\">  Supervisor</option>\n    <option value=\"Administrator\">  Administrator</option>\n  </select>\n</mat-form-field><br>\n  <button type=\"submit\" mat-raised-button color=\"primary\">save</button>\n</form>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-nav></app-nav>\n<mat-card>\n<iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3964.2908298229395!2d3.3841355140768634!3d6.484805595308925!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x103b8deb5826a0f7%3A0xca5f39ff365897a7!2sPerfect%20Wash%20Dry%20Cleaning%20and%20Laundry%20Services!5e0!3m2!1sen!2sng!4v1587352109888!5m2!1sen!2sng\" width=\"600\" height=\"450\" frameborder=\"0\" style=\"border:0;\" allowfullscreen=\"\" aria-hidden=\"false\" tabindex=\"0\"></iframe>\n<mat-card>\n<h2>Reach out to us</h2>\n<p>08089751275</p>\n<p>perfectwash@perfectwash.com</p>\n</mat-card>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticateService } from '../authenticate.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-createshop',\n  templateUrl: './createshop.component.html',\n  styleUrls: ['./createshop.component.css']\n})\nexport class CreateshopComponent implements OnInit {\n  imageurl = '../../assets/bannermed.jpg';\n  constructor(private auth: AuthenticateService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  getNewShop(shop) {\n    this.auth.createShop(shop);\n  }\n\n\n\n}\n","\n<app-admin-nav></app-admin-nav>\n<mat-card>\n  <img mat-card-image [src]=\"imageurl\">\n<form #shop=\"ngForm\" (ngSubmit)=\"getNewShop(shop.value)\">\n  <h2>create a new shop</h2>\n  <mat-form-field appearance=\"outline\">\n  <mat-label for=\"shopname\">Shop name</mat-label>\n  <input matInput type=\"text\" name=\"shopName\" placeholder=\"Shop name\" id=\"shopName\" ngModel required>\n  </mat-form-field>\n  <br>\n  <mat-form-field appearance=\"outline\">\n  <mat-label for=\"phoneNumber\">Phone number</mat-label>\n  <input matInput type=\"text\" name=\"phoneNumber\" placeholder=\"Shop number\" id=\"phoneNumber\" ngModel required>\n  </mat-form-field><br>\n  <span>default password is welcome</span><br>\n  <button type=\"submit\"color=\"primary\" mat-raised-button>create shop</button>\n</form>\n</mat-card>\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\nimport { Customer } from '../model/customer.model';\n\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent implements OnInit {\n  @Input() customer: Customer;\n  constructor(private api: ApiService, private router: Router) {\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  click(customer){\n    this.router.navigateByUrl(`/admin/customers/${customer._id}`)\n  }\n  deleteCustomer(){\n    this.api.deleteCustomer(this.customer._id)\n    .subscribe(response => {\n        console.log(response);\n    });\n  }\n\n  editCustomer(){\n    this.router.navigateByUrl(`/admin/customers/${this.customer._id}`);\n  }\n\n}\n","\n<mat-card>\n  <mat-list>\n  <mat-list-item><span class=\"labels\"><strong>status</strong></span><span class=\"status\">{{ customer.status }}</span></mat-list-item>\n  <mat-divider [inset] =\"true\"></mat-divider>\n<mat-list-item><span class=\"labels\"><strong>name</strong></span><span>{{ customer.name }}</span></mat-list-item>\n  <mat-divider [inset] =\"true\"></mat-divider>\n<mat-list-item><span class=\"labels\"><strong>items</strong></span><span>{{customer.numberItems}}</span></mat-list-item>\n  <mat-divider [inset] =\"true\"></mat-divider>\n<mat-list-item><span class=\"labels\"><strong>amount</strong></span><span>{{customer.amountPaid}}</span></mat-list-item>\n  <mat-divider [inset] =\"true\"></mat-divider>\n<mat-list-item><span class=\"labels\"><strong>shop</strong></span><span>{{ customer.shopPhone }}</span></mat-list-item>\n<mat-divider [inset] =\"true\"></mat-divider>\n<mat-list-item><span class=\"labels\"><strong>date</strong></span><span>{{ customer.createdAt | date:'medium' }}</span></mat-list-item>\n\n</mat-list>\n</mat-card>\n\n\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Customer } from '../model/customer.model';\nimport { Router } from '@angular/router';\nimport { AuthenticateService } from '../authenticate.service';\n\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.css']\n})\nexport class CustomersComponent implements OnInit {\n  @Input() customers: Customer[];\n  @Output() aCustomer: Customer;\n  imageurl = '../../assets/bannermed.jpg';\n  constructor(\n     private api: ApiService,\n     private router: Router,\n     private auth: AuthenticateService) {\n\n  }\n\n  ngOnInit(): void {\n    console.log(this.auth.isAdmin());\n    if(this.auth.isAdmin()){\n     this.getCustomers();\n    }else{\n    this.getShopCustomers();\n    }\n  }\n\n  customerSelected(customer: Customer){\n    this.aCustomer = customer;\n    console.log(this.aCustomer);\n    this.router.navigate([`/admin/washes/${this.aCustomer._id}`]);\n  }\n\n\n  getShopCustomers(){\n    const { phoneNumber } = this.auth.getPayLoad();\n    console.log(phoneNumber)\n    this.api.getShopCustomers(phoneNumber)\n    .subscribe((response: any) => {\n      console.log(response);\n      this.customers = response.customers;\n    });\n  }\n\n  getCustomers(): boolean{\n    this.api.getCustomers()\n    .subscribe((response: any) => {\n     // console.log(response.data);\n      this.customers = response.data;\n    });\n    return false;\n  }\n\n}\n","<app-admin-nav></app-admin-nav>\n<mat-card>\n  <img mat-card-image [src]=\"imageurl\">\n  <h2 class=\"white\">washes</h2>\n<app-customer\n*ngFor=\"let thecustomer of customers\"\n(click)=\"customerSelected(thecustomer)\"\n[customer]='thecustomer'>\n</app-customer>\n</mat-card>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dashboard works!</p>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from '../api.service';\nimport { Location } from '@angular/common';\nimport { Customer } from '../model/customer.model';\n\n@Component({\n  selector: 'app-edit-customer',\n  templateUrl: './edit-customer.component.html',\n  styleUrls: ['./edit-customer.component.css']\n})\nexport class EditCustomerComponent implements OnInit {\n  id: string;\n  @Input() thecustomer; aCustomer;\n  imageurl = '../../assets/bannermed.jpg';\n  constructor(\n    private route: ActivatedRoute,\n    private api: ApiService,\n    private router: Router,\n    private location: Location) {\n\n   }\n\n  ngOnInit(): void {\n    console.log(this.thecustomer);\n    this.route.params.subscribe(params => {this.id = params.id; });\n    this.api.getTheCustomer(this.id)\n    .subscribe((response: any) => {\n      this.thecustomer = response.customer[0];\n    });\n  }\n\n\n  saveCustomerStatus(customer){\n\n    customer._id = this.id;\n    console.log(customer);\n    this.api.saveCustomer(customer).subscribe(res => res);\n    this.router.navigateByUrl('/admin/adminboard');\n\n  }\n\n  deleteItems(){\n    this.api.deleteCustomer(this.id)\n    .subscribe(res => res);\n    this.router.navigateByUrl('/admin/adminboard');\n  }\n\n  cancel(){\n    this.location.back();\n  }\n\n\n\n}\n","<app-admin-nav></app-admin-nav>\n<mat-card>\n  <img mat-card-image [src]=\"imageurl\">\n<h2>update wash status</h2>\n<form #customer=\"ngForm\" (ngSubmit)=\"saveCustomerStatus(customer.value)\">\n  <mat-form-field appearance=\"outline\">\n    <mat-label for=\"status\">Status</mat-label>\n  <select  id=\"status\" name=\"status\" [(ngModel)]=\"thecustomer.status\" matNativeControl required>\n    <option value=\"Peceived\">Received</option>\n    <option value=\"Washing\">Washing</option>\n    <option value=\"Drying\">Drying</option>\n    <option value=\"Pressing\">Pressing</option>\n    <option value=\"Ready\">Ready</option>\n    <option value=\"Collected\">Collected</option>\n  </select>\n</mat-form-field>\n<br>\n<mat-form-field appearance=\"outline\">\n  <mat-label for=\"name\">Name</mat-label>\n  <input matInput type=\"name\" id=\"name\" name=\"customername\" [(ngModel)]=\"thecustomer.name\" disabled>\n</mat-form-field>\n<br>\n<mat-form-field appearance=\"outline\">\n  <mat-label for=\"phoneNumber\">Phone number</mat-label>\n  <input matInput type=\"text\" id=\"phoneNumber\" name=\"phoneNumber\" [(ngModel)]=\"thecustomer.phoneNumber\" disabled>\n</mat-form-field>\n<br>\n<mat-form-field appearance=\"outline\">\n  <mat-label for=\"numberItems\">Items</mat-label>\n  <input matInput type=\"text\" id=\"numberItems\" name=\"numberItems\" [(ngModel)]=\"thecustomer.numberItems\" disabled>\n</mat-form-field>\n<br>\n<mat-form-field appearance=\"outline\">\n  <mat-label for=\"amountPaid\">Amount</mat-label>\n  <input matInput type=\"text\" id=\"amountPaid\" name=\"amountPaid\" [(ngModel)]=\"thecustomer.amountPaid\" disabled>\n</mat-form-field>\n<br>\n  <button mat-raised-button type=\"submit\" color=\"primary\" > Save </button>\n</form>\n  <h2>{{ thecustomer.eventDate | date:'medium' }}</h2>\n  <button (click)=\"cancel()\" color=\"basic\" mat-raised-button>Cancel</button>\n  <button (click)=\"deleteItems()\" color=\"warn\" mat-raised-button>Delete</button>\n</mat-card>\n","import { Component, OnInit, Input } from '@angular/core';\nimport {Location } from '@angular/common';\nimport { ApiService } from '../api.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Shop } from '../model/shop.model';\n\n@Component({\n  selector: 'app-editshop',\n  templateUrl: './editshop.component.html',\n  styleUrls: ['./editshop.component.css']\n})\nexport class EditshopComponent implements OnInit {\n  @Input() theshop: Shop;\n  id;\n  totalWash;\n  totalWashAmount;\n  dailyWashes;\n  wash;\n  imageurl = '../../assets/bannermed.jpg';\n  constructor(\n    private route: ActivatedRoute,\n    private api: ApiService,\n    private router: Router,\n    private location: Location) { }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.paramMap.get('id');\n    this.api.getTheShop(this.id)\n    .subscribe((response: any) => {\n      this.theshop = response.shop[0];\n      this.totalWash = (response.washes).length;\n      this.totalWashAmount = (response.washes).reduce((total, wash) => {\n        return total + parseFloat(wash.amountPaid);\n      },0);\n\n    });\n\n\n\n  }\n\n  back() {\n    this.location.back();\n  }\n\n  delete(id){\n    this.api.deleteShop(id)\n    .subscribe(res => res);\n    this.router.navigateByUrl('/admin/seeshops');\n  }\n\n}\n","<app-admin-nav></app-admin-nav>\n<mat-card>\n<h2>shop details</h2>\n<app-shop [shop]=\"theshop\"></app-shop>\n<mat-list>\n  <mat-list-item>total wash amount: {{totalWashAmount | currency: \"NGN\":\"symbol-narrow\"}}</mat-list-item>\n  <mat-list-item>total washes: {{totalWash}}</mat-list-item>\n</mat-list>\n\n<button mat-raised-button color=\"basic\" (click)=\"back()\">Back</button>\n<button (click)=\"delete(theshop._id)\" mat-raised-button color=\"warn\">Delete</button>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>\n<span>jasolajohn@gmail.com</span>\n</footer>\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Customer } from '../model/customer.model';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\n\nexport class HomeComponent implements OnInit {\n  thecustomer: Customer;\n\n  imageurl = '../../assets/bannermed.jpg';\n  constructor(private api: ApiService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  getCustomer(phonenumber) {\n    this.api.getCustomer(phonenumber)\n      .subscribe((theCustomer: any) => {\n        const customer = theCustomer.data;\n        this.thecustomer = customer.filter((c: Customer) => {\n          return c.status !== 'Collected';\n        });\n\n      });\n  }\n}\n\n","<app-nav></app-nav>\n <mat-card class=\"mattop50\">\n  <img mat-card-image [src]=\"imageurl\">\n  <h3>kindly check your laundry status</h3>\n  <form #customer=\"ngForm\" (ngSubmit)=\"getCustomer(customer.value)\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label for=\"phonenumber\">Phone number</mat-label>\n    <input matInput size=\"10\"  required type=\"text\" placeholder=\"Kindly enter your Phone number\" id=\"phonenumber\" name=\"phonenumber\" ngModel/>\n  <button color=\"accent\" type=\"submit\" mat-raised-button >Check laundry status</button>\n  </mat-form-field>\n  </form>\n</mat-card>\n\n\n\n<mat-card *ngFor=\"let c of thecustomer\">\n  <mat-list>\n  <mat-list-item><span class=\"labels\"><strong>status</strong></span><span class=\"right\">{{c.status}}</span></mat-list-item>\n  <mat-divider [inset] =\"true\"></mat-divider>\n<mat-list-item><span class=\"labels\"><strong>items</strong></span><span>{{c.numberItems}}</span></mat-list-item>\n  <mat-divider [inset] =\"true\"></mat-divider>\n<mat-list-item><span class=\"labels\"><strong>amount</strong></span><span>{{c.amountPaid | currency: \"NGN\":\"symbol-narrow\"}}</span></mat-list-item>\n  <mat-divider [inset] =\"true\"></mat-divider>\n<mat-list-item><span class=\"labels\"><strong>date</strong></span><span>{{c.createdAt | date:'medium'}}</span></mat-list-item>\n<mat-divider [inset] =\"true\"></mat-divider>\n<mat-list-item><span class=\"labels\"><strong>shop</strong></span><span>{{c.shopPhone}}</span></mat-list-item>\n</mat-list>\n</mat-card>\n\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest, HttpEvent, HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class Interceptor implements HttpInterceptor {\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (token) {\r\n      const tokenReq = request.clone({\r\n        setHeaders: { 'x-auth-token': token }\r\n      });\r\n      return next.handle(tokenReq);\r\n    } else {\r\n      return next.handle(request);\r\n    }\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatListModule} from '@angular/material/list';\nimport {MatTabsModule} from '@angular/material/tabs';\n\nconst MaterialComponents = [\n  MatTableModule,\n  MatButtonModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatToolbarModule,\n  MatCardModule,\n  MatBadgeModule,\n  MatSelectModule,\n  MatDividerModule,\n  MatListModule,\n  MatTabsModule\n\n];\n\n@NgModule({\n  imports: [\n    MaterialComponents\n  ],\n  exports: [\n    MaterialComponents\n  ]\n})\nexport class MaterialModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-nav-list class=\"nav\">\n  <a [routerLink]=\"['/']\" routerLinkActive=\"router-link-active\" mat-button color=\"primary\">Home</a>\n  <a [routerLink]=\"['/contact']\" routerLinkActive=\"router-link-active\" mat-button color=\"primary\">Contact</a>\n</mat-nav-list>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pagenotfound',\n  templateUrl: './pagenotfound.component.html',\n  styleUrls: ['./pagenotfound.component.css']\n})\nexport class PagenotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>pagenotfound works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\nimport { AuthenticateService } from '../authenticate.service';\n\n@Component({\n  selector: 'app-reg-customer',\n  templateUrl: './reg-customer.component.html',\n  styleUrls: ['./reg-customer.component.css']\n})\nexport class RegCustomerComponent implements OnInit {\n  imageurl = '../../assets/bannermed.jpg';\n  constructor(\n     private api: ApiService,\n     private router: Router,\n     private auth: AuthenticateService) { }\n\n  ngOnInit(): void {\n  }\n\n  regCustomer(user){\n    console.log(this.auth.getPayLoad());\n    const { phoneNumber } = this.auth.getPayLoad();\n    user.shopPhone = phoneNumber;\n    console.log(user);\n    this.api.postCustomer(user)\n    .subscribe(data => {\n    if(data){\n      this.router.navigate(['/admin/adminboard']);\n    }\n    });\n  }\n\n\n\n}\n","<app-admin-nav></app-admin-nav>\n<mat-card>\n  <img mat-card-image [src]=\"imageurl\">\n<h2>make a wash</h2>\n<form #f=\"ngForm\" (ngSubmit)=\"regCustomer(f.value)\">\n  <mat-form-field appearance=\"outline\">\n  <mat-label for=\"name\">Customer name</mat-label>\n  <input matInput type=\"text\" name=\"name\" placeholder=\"Customer name\" id=\"name\" ngModel required>\n</mat-form-field>\n<br>\n<mat-form-field appearance=\"outline\">\n  <mat-label for=\"phone\">Phone number</mat-label>\n  <input matInput type=\"text\" name=\"phone\" placeholder=\"Phone number\" id=\"phone\" ngModel required>\n</mat-form-field>\n<br>\n<mat-form-field appearance=\"outline\">\n  <mat-label for=\"itemsCount\">Items count</mat-label>\n  <input matInput type=\"number\"  name=\"itemsCount\"placeholder=\"number of items\" id=\"itemsCount\" ngModel required>\n </mat-form-field>\n <br>\n<mat-form-field appearance=\"outline\">\n  <mat-label for=\"amount\">Amount</mat-label>\n  <input matInput type=\"number\" name=\"amount\" placeholder=\"Amount\" id=\"amount\" ngModel required>\n</mat-form-field>\n<br>\n  <button type=\"submit\" color=\"primary\" mat-raised-button>+ wash</button>\n</form>\n</mat-card>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Shop } from '../model/shop.model';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-shop',\n  templateUrl: './shop.component.html',\n  styleUrls: ['./shop.component.css']\n})\nexport class ShopComponent implements OnInit {\n  @Input() shop: Shop;\n  constructor(private api: ApiService) { }\n\n  ngOnInit(): void {\n\n  }\n\n  shopSales(){\n\n  }\n\n  dailyWash(){\n\n  }\n  totalWash(){\n\n\n  }\n\n\n\n\n}\n","\n<mat-card>\n  <mat-list>\n  <mat-list-item><span class=\"labels\"><strong>name</strong></span><span class=\"right\">{{shop.shopName}}</span></mat-list-item>\n  <mat-divider [inset]=\"true\"></mat-divider>\n  <mat-list-item><span class=\"labels\"><strong>phonenumber</strong></span><span>{{shop.phoneNumber}}</span></mat-list-item>\n  <mat-divider [inset]=\"true\"></mat-divider>\n  <mat-list-item><span class=\"labels\"><strong>role</strong></span><span>{{shop.role}}</span></mat-list-item>\n  </mat-list>\n</mat-card>\n\n","import { Component, OnInit, Input, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Shop } from '../model/shop.model';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-shops',\n  templateUrl: './shops.component.html',\n  styleUrls: ['./shops.component.css']\n})\nexport class ShopsComponent implements OnInit {\n  @Input() shops: Shop[];\n  @Output() theShop: Shop;\n  imageurl = '../../assets/bannermed.jpg';\n  constructor(private router: Router, private api: ApiService) { }\n\n  ngOnInit(): void {\n    this.getShops();\n  }\n\n  selectShop(shop: Shop){\n    this.theShop = shop;\n    console.log(this.theShop);\n    this.router.navigate([`/admin/shops/${this.theShop._id}`]);\n  }\n\n\n  getShops(){\n    this.api.getShops()\n    .subscribe((res: any) => {\n      this.shops = res.shops;\n      console.log(this.shops);\n    } );\n  }\n}\n","<app-admin-nav></app-admin-nav>\n<mat-card>\n  <img mat-card-image [src]=\"imageurl\">\n<h2>shops</h2>\n\n<app-shop\n*ngFor=\"let ashop of shops\"\n(click)=\"selectShop(ashop)\"\n[shop]=\"ashop\"></app-shop>\n</mat-card>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}